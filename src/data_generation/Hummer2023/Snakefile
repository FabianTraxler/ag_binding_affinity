from pathlib import Path

# data downloaded from https://github.com/amhummer/Graphinity/tree/main/data
project_root = Path(workflow.basedir).parents[2] # two directories above - absolute paths not working
out_folder = project_root / "results" / "synthetic_ddg" / "full_dataset"
in_folder = project_root / "resources" / "synthetic_ddg" / "data/naga03/not-backed-up/scratch/hummer/synth_aff_data/synthetic_ddg_dataset_for_sharing/synthetic_ddg_mutated_pdbs/"


def all_pdb_files(wildcards):
    for pdb in in_folder.glob("*.pdb"):
        yield out_folder / pdb.name

rule all:
    input:
        all_pdb_files


rule trim_complex:
    """
    """
    input:
        pdb=in_folder / "{pdb}.pdb",
    output:
        pdb=out_folder / "{pdb}.pdb",
    params:
        max_l_len=115,
        max_h_len=125
    conda: "ag_binding_diffusion3"
    resources:
        mem_mb=10000
    threads: 1
    script: "scripts/trim_complex.py"


rule copy_pdbs_with_absolute_labels:
    """
    A rule to aggregate all PDBs that have positive labels

    TODO this is pseudocode
    """
    output:
        directory(project_root / "results" / "synthetic_ddg" / "with_absolute_label")
    run:
        df = pd.read_csv("../abag_affinity_dataset/abag_affinity_dataset.csv")
        syn_pdbs = subprocess.run('ls | grep -E "....\.pdb"')
        syn_pdbs2 = [v[:4] for v in syn_pdbs]
        selected_pdbs = set(df["pdb"]).intersection(syn_pdbs2)
        all_files = Path("full_dataset/").iterdir("")
        to_copy = [f for f in all_files if f.name[:4] in selected_pdbs]
        for f in to_copy:
            shutil.copy(f, output[0])

rule csv_with_absolute_labels:
    """
    Generate the CSV file with absolute labels
    """
    input:
        syn_df=project_root / "results" / "synthetic_ddg" / "ddg.csv",
        abag_df=project_root / "results" / "abag_affinity_dataset" / "abag_affinity_dataset.csv"
    output:
        project_root / "results" / "synthetic_ddg" / "ddg_with_absolute_labels.csv"
    log:
        notebook="logs/adjust_csv.ipynb"
    notebook:
        "scripts/adjust_csv.py.ipynb"
