from os.path import join
import os
from pathlib import Path

DATASET_NAME = "abag_affinity_dataset"

project_root = Path(workflow.basedir).parents[3] # two directories above - absolute paths not working
print(project_root)
resource_folder = join(project_root, "resources")
results_folder = join(project_root, "results")

dataset_resource_folder = join(resource_folder, DATASET_NAME)
dataset_results_folder = join(results_folder, DATASET_NAME)

pdb_path = os.path.join(dataset_results_folder, "pdbs")
pdb_files = os.listdir(pdb_path)
pdb_ids = [ pdb_file.split(".")[0] for pdb_file in pdb_files if pdb_file.endswith(".pdb")]

out_folder = join(results_folder, "force_field_tests", "abag_affinity", "REF15")


rule all:
    input:
        join(out_folder, "abag_affinity_summary.csv")

# use not relaxed wildtype
rule score_wildtype:
    input:
        pdb_path + '/{pdb_id}.pdb'
    output:
        out_folder + "/bound_wildtype/{pdb_id}.pdb",
    conda: join(project_root, "envs", "generation_environment.yml")
    script: "scripts/score.py"

rule unbind_wildtype:
    input:
        out_folder + "/bound_wildtype/{pdb_id}.pdb",
    output:
        out_folder + "/unbound_wildtype/{pdb_id}.pdb"
    conda:  join(project_root, "envs", "generation_environment.yml")
    script: "scripts/unbind.py"

rule relax_unbound:
    input:
        out_folder +"/unbound_wildtype/{pdb_id}.pdb"
    output:
        out_folder +"/unbound_relaxed/{pdb_id}.pdb"
    conda:  join(project_root, "envs", "generation_environment.yml")
    script: "scripts/relax.py"

# use relaxed wildtype
rule relax_wildtype:
    input:
        pdb_path + '/{pdb_id}.pdb'
    output:
        out_folder + "/bound_relaxed/{pdb_id}.pdb",
    conda:  join(project_root, "envs", "generation_environment.yml")
    script: "scripts/relax.py"

rule unbind_relaxed:
    input:
        out_folder + "/bound_relaxed/{pdb_id}.pdb",
    output:
        out_folder + "/relaxed_unbound/{pdb_id}.pdb"
    conda:  join(project_root, "envs", "generation_environment.yml")
    script: "scripts/unbind.py"

rule rerelax_unbound:
    input:
        out_folder +"/relaxed_unbound/{pdb_id}.pdb"
    output:
        out_folder +"/relaxed_unbound_relaxed/{pdb_id}.pdb"
    conda:  join(project_root, "envs", "generation_environment.yml")
    script: "scripts/relax.py"

rule calculate_binding_affinities:
    input:
        # expand(out_folder + '/bound_wildtype/{pdb_id}.pdb', pdb_id=pdb_ids),
        # expand(out_folder + '/unbound_wildtype/{pdb_id}.pdb', pdb_id=pdb_ids),
        # expand(out_folder + '/unbound_relaxed/{pdb_id}.pdb', pdb_id=pdb_ids),
        expand(out_folder + '/bound_relaxed/{pdb_id}.pdb', pdb_id=pdb_ids),
        # expand(out_folder + '/relaxed_unbound/{pdb_id}.pdb', pdb_id=pdb_ids),
        expand(out_folder + '/relaxed_unbound_relaxed/{pdb_id}.pdb', pdb_id=pdb_ids),
    output:
        join(out_folder, "abag_affinity_summary.csv")
    conda:  join(project_root, "envs", "generation_environment.yml")
    script: "scripts/calculate_affinities.py"
