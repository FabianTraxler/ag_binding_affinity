import os
from os.path import join
import pandas as pd
from pathlib import Path


DATASET_NAME = "SKEMPI_v2"
REDUNDANCY_CUTOFF = 0.8
ONLY_ABS = True  # The way it is implemented now, I am not sure if it works for other PPIs, because of chain renaming (no big deal, check generate_dataset.py). Also, we truncate L and H chains...

dataset_metadata_file = "skempi_v2.csv"

project_root = Path(workflow.basedir).parents[2] # two directories above - absolute paths not working
resource_folder = os.path.join(project_root, "resources")
results_folder = os.path.join(project_root, "results")

abag_affinity_df_path = join(results_folder, "abag_affinity_dataset", "abag_affinity_dataset.csv")
abag_affinity_pdb_path = join(results_folder, "abag_affinity_dataset", "pdbs")

dataset_resource_folder = os.path.join(resource_folder, DATASET_NAME)
dataset_results_folder = os.path.join(results_folder, DATASET_NAME)

pdb_relaxed_folder = os.path.join(dataset_results_folder, "pdbs_relaxed")
pdb_folder = os.path.join(dataset_resource_folder, "pdbs")


def get_mutations(wildcards):
    fn = checkpoints.generate_dataset.get(**wildcards).output[0]
    skempi_df = pd.read_csv(fn)
    # output_type=["mutated", "relaxed", "relaxed_mutated", "mutated_relaxed"]
    return expand(dataset_results_folder + "/{output_type}/{fn}", output_type=["mutated_relaxed", "mutated"], fn=skempi_df["filename"])


rule final_output:
    input:
        #join(dataset_results_folder, "/skempi_generation_summary.csv"),
        join(dataset_results_folder, dataset_metadata_file),
        get_mutations


rule download:
    output:
        join(dataset_resource_folder, dataset_metadata_file),
        directory(pdb_folder)
    params:
        resource_folder=dataset_resource_folder,
    shell:
        "scripts/download.sh {params.resource_folder} {output} "


checkpoint generate_dataset:
    input:
        join(dataset_resource_folder, dataset_metadata_file)
    output:
        join(dataset_results_folder, dataset_metadata_file)
    params:
        abag_affinity_pdb_path = abag_affinity_pdb_path,
        abag_affinity_df_path = abag_affinity_df_path,
        redundancy_cutoff = REDUNDANCY_CUTOFF,
        only_abs = ONLY_ABS,
        check_redundancy = False,
        pdb_folder = join(dataset_results_folder, "mutated")
    conda:
        join(project_root, "envs/generation_environment.yml")
    script:
        "scripts/generate_dataset.py"


rule mutate_wildtype:
    input:
        join(pdb_folder, '{pdb_id}.pdb')
    output:
        join(dataset_results_folder, "mutated_uncleaned", "{pdb_id}/{mutation}.pdb")
    conda:
        join(project_root,"envs/generation_environment.yml")
    script:
        "scripts/mutate.py"


rule relax_mutated:
    input:
        join(dataset_results_folder, "mutated_uncleaned", "{pdb_id}/{mutation}.pdb")
    output:
        join(dataset_results_folder, "mutated_relaxed_uncleaned", "{pdb_id}/{mutation}.pdb")
    conda:
        join(project_root,"envs/generation_environment.yml")
    resources:
        mem_mb=4000
    script:
        "../scripts/relax.py"


# use relaxed wiltype for mutation
rule relax_wildtype:
    input:
        join(pdb_folder, '{pdb_id}.pdb')
    output:
        join(dataset_results_folder, "relaxed_uncleaned", "{pdb_id}.pdb")
    conda:
        join(project_root,"envs/generation_environment.yml")
    resources:
        mem_mb=4000
    script:
        "../scripts/relax.py"


rule mutate_relaxed_wildtype:
    input:
        join(dataset_results_folder, "relaxed_uncleaned", "{pdb_id}.pdb")
    output:
        join(dataset_results_folder,"relaxed_mutated_uncleaned", "{pdb_id}/{mutation}.pdb")
    conda:
        join(project_root,"envs/generation_environment.yml")
    script:
        "scripts/mutate.py"

# clean all pdbs, renaming chains on the way and truncate ABs!
rule clean_pdbs:
    input:
        pdb=join(dataset_results_folder, "{folder}_uncleaned", "{pdb_id}/{mutation}.pdb"),
        skempi_df=join(dataset_results_folder, dataset_metadata_file)
    output:
        join(dataset_results_folder, "{folder,(relaxed|mutated|_)+}", "{pdb_id}/{mutation}.pdb")
    conda:
        "ag_binding_diffusion3"   # conda env loading does not work with "script:"  https://github.com/snakemake/snakemake/issues/1811
    # script:
    #     "scripts/clean_pdb.py"
    shell:
        "python scripts/clean_pdb.py {input.pdb} {output} {input.skempi_df} {wildcards.pdb_id}"
