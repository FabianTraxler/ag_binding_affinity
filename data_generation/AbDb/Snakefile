import os
import pandas as pd
from abag_affinity.utils.config import read_yaml, get_data_paths

config = read_yaml("../../abag_affinity/config.yaml")
configfile: "../../abag_affinity/config.yaml"
_, pdb_path = get_data_paths(config, "AbDb")
pdb_files = os.listdir(pdb_path)
wiltype_pdbs = [ pdb_file.split(".")[0] for pdb_file in pdb_files ]

data_path = config["DATA"]["path"]
abdb_folder_path = os.path.join(data_path, config["DATA"]["AbDb"]["folder_path"])


rule final_output:
    input:
        expand(abdb_folder_path + '/unbound_relaxed/{pdb_id}.pdb', zip, pdb_id=wiltype_pdbs),
        expand(abdb_folder_path + '/relaxed_unbound_relaxed/{pdb_id}.pdb', zip, pdb_id=wiltype_pdbs),
        expand(abdb_folder_path + '/bound_wildtype/{pdb_id}.pdb', zip, pdb_id=wiltype_pdbs)

# use not relaxed wildtype
rule score_wildtype:
    input:
        pdb_path + '/{pdb_id}.pdb'
    output:
        abdb_folder_path + "/bound_wildtype/{pdb_id}.pdb",
    conda: "../../envs/rosetta_environment.yml"
    script: "scripts/score.py"

rule unbind_wildtype:
    input:
        abdb_folder_path + "/bound_wildtype/{pdb_id}.pdb",
    output:
        abdb_folder_path + "/unbound_wildtype/{pdb_id}.pdb"
    conda: "../../envs/rosetta_environment.yml"
    resources:
        mem_mb=1000
    script: "scripts/unbind.py"

rule relax_unbound:
    input:
        abdb_folder_path +"/unbound_wildtype/{pdb_id}.pdb"
    output:
        abdb_folder_path +"/unbound_relaxed/{pdb_id}.pdb"
    conda: "../../envs/rosetta_environment.yml"
    resources:
        mem_mb=4000
    script: "scripts/relax.py"


# use relaxed wildtype
rule relax_wildtype:
    input:
        pdb_path + '/{pdb_id}.pdb'
    output:
        abdb_folder_path + "/bound_relaxed/{pdb_id}.pdb",
    conda: "../../envs/rosetta_environment.yml"
    resources:
        mem_mb=4000
    script: "scripts/relax.py"

rule unbind_relaxed:
    input:
        abdb_folder_path + "/bound_relaxed/{pdb_id}.pdb",
    output:
        abdb_folder_path + "/relaxed_unbound/{pdb_id}.pdb"
    conda: "../../envs/rosetta_environment.yml"
    resources:
        mem_mb=1000
    script: "scripts/unbind.py"

rule rerelax_unbound:
    input:
        abdb_folder_path +"/relaxed_unbound/{pdb_id}.pdb"
    output:
        abdb_folder_path +"/relaxed_unbound_relaxed/{pdb_id}.pdb"
    conda: "../../envs/rosetta_environment.yml"
    resources:
        mem_mb=4000
    script: "scripts/relax.py"
